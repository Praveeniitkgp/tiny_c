Terminals which are not used

   STRUCT
   TYPEDEF
   UNION
   HASH
   INVALID_TOKEN


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: IDENTIFIER
    2                   | INTEGER_CONSTANT
    3                   | FLOATING_CONSTANT
    4                   | CHARACTER_CONSTANT
    5                   | STRING_LITERAL
    6                   | LEFT_PARENTHESES expression RIGHT_PARENTHESES

    7 postfix_expression: primary_expression
    8                   | postfix_expression LEFT_SQUARE_BRACKET expression RIGHT_SQUARE_BRACKET
    9                   | postfix_expression LEFT_PARENTHESES argument_expression_list_opt RIGHT_PARENTHESES
   10                   | postfix_expression DOT IDENTIFIER
   11                   | postfix_expression ARROW IDENTIFIER
   12                   | postfix_expression INCREMENT
   13                   | postfix_expression DECREMENT
   14                   | LEFT_PARENTHESES type_name RIGHT_PARENTHESES LEFT_CURLY_BRACKET initialiser_list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESES type_name RIGHT_PARENTHESES LEFT_CURLY_BRACKET initialiser_list COMMA RIGHT_CURLY_BRACKET

   16 argument_expression_list_opt: argument_expression_list
   17                             | /* empty */

   18 argument_expression_list: assignment_expression
   19                         | argument_expression_list COMMA assignment_expression

   20 unary_expression: postfix_expression
   21                 | INCREMENT unary_expression
   22                 | DECREMENT unary_expression
   23                 | unary_operator cast_expression
   24                 | SIZEOF unary_expression
   25                 | SIZEOF LEFT_PARENTHESES type_name RIGHT_PARENTHESES

   26 unary_operator: BITWISE_AND
   27               | ASTERISK
   28               | PLUS
   29               | MINUS
   30               | TILDE
   31               | EXCLAMATION

   32 cast_expression: unary_expression
   33                | LEFT_PARENTHESES type_name RIGHT_PARENTHESES cast_expression

   34 multiplicative_expression: cast_expression
   35                          | multiplicative_expression ASTERISK cast_expression
   36                          | multiplicative_expression SLASH cast_expression
   37                          | multiplicative_expression MODULO cast_expression

   38 additive_expression: multiplicative_expression
   39                    | additive_expression PLUS multiplicative_expression
   40                    | additive_expression MINUS multiplicative_expression

   41 shift_expression: additive_expression
   42                 | shift_expression LEFT_SHIFT additive_expression
   43                 | shift_expression RIGHT_SHIFT additive_expression

   44 relational_expression: shift_expression
   45                      | relational_expression LESS_THAN shift_expression
   46                      | relational_expression GREATER_THAN shift_expression
   47                      | relational_expression LESS_EQUAL_THAN shift_expression
   48                      | relational_expression GREATER_EQUAL_THAN shift_expression

   49 equality_expression: relational_expression
   50                    | equality_expression EQUALS relational_expression
   51                    | equality_expression NOT_EQUALS relational_expression

   52 AND_expression: equality_expression
   53               | AND_expression BITWISE_AND equality_expression

   54 exclusive_OR_expression: AND_expression
   55                        | exclusive_OR_expression BITWISE_XOR AND_expression

   56 inclusive_OR_expression: exclusive_OR_expression
   57                        | inclusive_OR_expression BITWISE_OR exclusive_OR_expression

   58 logical_AND_expression: inclusive_OR_expression
   59                       | logical_AND_expression LOGICAL_AND inclusive_OR_expression

   60 logical_OR_expression: logical_AND_expression
   61                      | logical_OR_expression LOGICAL_OR logical_AND_expression

   62 conditional_expression: logical_OR_expression
   63                       | logical_OR_expression QUESTION_MARK expression COLON conditional_expression

   64 assignment_expression: conditional_expression
   65                      | unary_expression assignment_operator assignment_expression

   66 assignment_operator: ASSIGNMENT
   67                    | ASTERISK_ASSIGNMENT
   68                    | SLASH_ASSIGNMENT
   69                    | MODULO_ASSIGNMENT
   70                    | PLUS_ASSIGNMENT
   71                    | MINUS_ASSIGNMENT
   72                    | LEFT_SHIFT_ASSIGNMENT
   73                    | RIGHT_SHIFT_ASSIGNMENT
   74                    | BITWISE_AND_ASSIGNMENT
   75                    | BITWISE_XOR_ASSIGNMENT
   76                    | BITWISE_OR_ASSIGNMENT

   77 expression: assignment_expression
   78           | expression COMMA assignment_expression

   79 constant_expression: conditional_expression

   80 declaration: declaration_specifiers init_declarator_list_opt SEMI_COLON

   81 init_declarator_list_opt: init_declarator_list
   82                         | /* empty */

   83 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   84                       | type_specifier declaration_specifiers_opt
   85                       | type_qualifier declaration_specifiers_opt
   86                       | function_specifier declaration_specifiers_opt

   87 declaration_specifiers_opt: declaration_specifiers
   88                           | /* empty */

   89 init_declarator_list: init_declarator
   90                     | init_declarator_list COMMA init_declarator

   91 init_declarator: declarator
   92                | declarator ASSIGNMENT initialiser

   93 storage_class_specifier: EXTERN
   94                        | STATIC
   95                        | AUTO
   96                        | REGISTER

   97 type_specifier: VOID
   98               | CHAR
   99               | SHORT
  100               | INT
  101               | LONG
  102               | FLOAT
  103               | DOUBLE
  104               | SIGNED
  105               | UNSIGNED
  106               | _BOOL
  107               | _COMPLEX
  108               | _IMAGINARY
  109               | enum_specifier

  110 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  111                         | type_qualifier specifier_qualifier_list_opt

  112 specifier_qualifier_list_opt: specifier_qualifier_list
  113                             | /* empty */

  114 enum_specifier: ENUM identifier_opt LEFT_CURLY_BRACKET enumerator_list RIGHT_CURLY_BRACKET
  115               | ENUM identifier_opt LEFT_CURLY_BRACKET enumerator_list COMMA RIGHT_CURLY_BRACKET
  116               | ENUM IDENTIFIER

  117 identifier_opt: IDENTIFIER
  118               | /* empty */

  119 enumerator_list: enumerator
  120                | enumerator_list COMMA enumerator

  121 enumerator: IDENTIFIER
  122           | IDENTIFIER ASSIGNMENT constant_expression

  123 type_qualifier: CONST
  124               | RESTRICT
  125               | VOLATILE

  126 function_specifier: INLINE

  127 declarator: pointer_opt direct_declarator

  128 pointer_opt: pointer
  129            | /* empty */

  130 direct_declarator: IDENTIFIER
  131                  | LEFT_PARENTHESES declarator RIGHT_PARENTHESES
  132                  | direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list_opt assignment_expression_opt RIGHT_SQUARE_BRACKET
  133                  | direct_declarator LEFT_SQUARE_BRACKET STATIC type_qualifier_list_opt assignment_expression RIGHT_SQUARE_BRACKET
  134                  | direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list STATIC assignment_expression RIGHT_SQUARE_BRACKET
  135                  | direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list_opt ASTERISK RIGHT_SQUARE_BRACKET
  136                  | direct_declarator LEFT_PARENTHESES parameter_type_list RIGHT_PARENTHESES
  137                  | direct_declarator LEFT_PARENTHESES identifier_list_opt RIGHT_PARENTHESES

  138 type_qualifier_list_opt: type_qualifier_list
  139                        | /* empty */

  140 assignment_expression_opt: assignment_expression
  141                          | /* empty */

  142 identifier_list_opt: identifier_list
  143                    | /* empty */

  144 pointer: ASTERISK type_qualifier_list_opt
  145        | ASTERISK type_qualifier_list_opt pointer

  146 type_qualifier_list: type_qualifier
  147                    | type_qualifier_list type_qualifier

  148 parameter_type_list: parameter_list
  149                    | parameter_list COMMA ELLIPSIS

  150 parameter_list: parameter_declaration
  151               | parameter_list COMMA parameter_declaration

  152 parameter_declaration: declaration_specifiers declarator
  153                      | declaration_specifiers

  154 identifier_list: IDENTIFIER
  155                | identifier_list COMMA IDENTIFIER

  156 type_name: specifier_qualifier_list

  157 initialiser: assignment_expression
  158            | LEFT_CURLY_BRACKET initialiser_list RIGHT_CURLY_BRACKET
  159            | LEFT_CURLY_BRACKET initialiser_list COMMA RIGHT_CURLY_BRACKET

  160 initialiser_list: designation_opt initialiser
  161                 | initialiser_list COMMA designation_opt initialiser

  162 designation_opt: designation
  163                | /* empty */

  164 designation: designator_list ASSIGNMENT

  165 designator_list: designator
  166                | designator_list designator

  167 designator: LEFT_SQUARE_BRACKET constant_expression RIGHT_SQUARE_BRACKET
  168           | DOT IDENTIFIER

  169 statement: labeled_statement
  170          | compound_statement
  171          | expression_statement
  172          | selection_statement
  173          | iteration_statement
  174          | jump_statement

  175 labeled_statement: IDENTIFIER COLON statement
  176                  | CASE constant_expression COLON statement
  177                  | DEFAULT COLON statement

  178 compound_statement: LEFT_CURLY_BRACKET block_item_list_opt RIGHT_CURLY_BRACKET

  179 block_item_list_opt: block_item_list
  180                    | /* empty */

  181 block_item_list: block_item
  182                | block_item_list block_item

  183 block_item: declaration
  184           | statement

  185 expression_statement: expression_opt SEMI_COLON

  186 expression_opt: expression
  187               | /* empty */

  188 selection_statement: IF LEFT_PARENTHESES expression RIGHT_PARENTHESES statement
  189                    | IF LEFT_PARENTHESES expression RIGHT_PARENTHESES statement ELSE statement
  190                    | SWITCH LEFT_PARENTHESES expression RIGHT_PARENTHESES statement

  191 iteration_statement: WHILE LEFT_PARENTHESES expression RIGHT_PARENTHESES statement
  192                    | DO statement WHILE LEFT_PARENTHESES expression RIGHT_PARENTHESES SEMI_COLON
  193                    | FOR LEFT_PARENTHESES expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt RIGHT_PARENTHESES statement
  194                    | FOR LEFT_PARENTHESES declaration expression_opt SEMI_COLON expression_opt RIGHT_PARENTHESES statement

  195 jump_statement: GOTO IDENTIFIER SEMI_COLON
  196               | CONTINUE SEMI_COLON
  197               | BREAK SEMI_COLON
  198               | RETURN expression_opt SEMI_COLON

  199 translation_unit: external_declaration
  200                 | translation_unit external_declaration

  201 external_declaration: function_definition
  202                     | declaration

  203 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement

  204 declaration_list_opt: declaration_list
  205                     | /* empty */

  206 declaration_list: declaration
  207                 | declaration_list declaration


Terminals, with rules where they appear

$end (0) 0
error (256)
AUTO (258) 95
BREAK (259) 197
CASE (260) 176
CHAR (261) 98
CONST (262) 123
CONTINUE (263) 196
DEFAULT (264) 177
DO (265) 192
DOUBLE (266) 103
ELSE (267) 189
ENUM (268) 114 115 116
EXTERN (269) 93
FLOAT (270) 102
FOR (271) 193 194
GOTO (272) 195
IF (273) 188 189
INLINE (274) 126
INT (275) 100
LONG (276) 101
REGISTER (277) 96
RESTRICT (278) 124
RETURN (279) 198
SHORT (280) 99
SIGNED (281) 104
SIZEOF (282) 24 25
STATIC (283) 94 133 134
STRUCT (284)
SWITCH (285) 190
TYPEDEF (286)
UNION (287)
UNSIGNED (288) 105
VOID (289) 97
VOLATILE (290) 125
WHILE (291) 191 192
_BOOL (292) 106
_COMPLEX (293) 107
_IMAGINARY (294) 108
IDENTIFIER (295) 1 10 11 116 117 121 122 130 154 155 168 175 195
INTEGER_CONSTANT (296) 2
FLOATING_CONSTANT (297) 3
CHARACTER_CONSTANT (298) 4
STRING_LITERAL (299) 5
LEFT_SQUARE_BRACKET (300) 8 132 133 134 135 167
INCREMENT (301) 12 21
SLASH (302) 36
QUESTION_MARK (303) 63
ASSIGNMENT (304) 66 92 122 164
COMMA (305) 15 19 78 90 115 120 149 151 155 159 161
RIGHT_SQUARE_BRACKET (306) 8 132 133 134 135 167
LEFT_PARENTHESES (307) 6 9 14 15 25 33 131 136 137 188 189 190 191
    192 193 194
LEFT_CURLY_BRACKET (308) 14 15 114 115 158 159 178
RIGHT_CURLY_BRACKET (309) 14 15 114 115 158 159 178
DOT (310) 10 168
ARROW (311) 11
ASTERISK (312) 27 35 135 144 145
PLUS (313) 28 39
MINUS (314) 29 40
TILDE (315) 30
EXCLAMATION (316) 31
MODULO (317) 37
LEFT_SHIFT (318) 42
RIGHT_SHIFT (319) 43
LESS_THAN (320) 45
GREATER_THAN (321) 46
LESS_EQUAL_THAN (322) 47
GREATER_EQUAL_THAN (323) 48
COLON (324) 63 175 176 177
SEMI_COLON (325) 80 185 192 193 194 195 196 197 198
ELLIPSIS (326) 149
ASTERISK_ASSIGNMENT (327) 67
SLASH_ASSIGNMENT (328) 68
MODULO_ASSIGNMENT (329) 69
PLUS_ASSIGNMENT (330) 70
MINUS_ASSIGNMENT (331) 71
LEFT_SHIFT_ASSIGNMENT (332) 72
HASH (333)
DECREMENT (334) 13 22
RIGHT_PARENTHESES (335) 6 9 14 15 25 33 131 136 137 188 189 190 191
    192 193 194
BITWISE_AND (336) 26 53
EQUALS (337) 50
BITWISE_XOR (338) 55
BITWISE_OR (339) 57
LOGICAL_AND (340) 59
LOGICAL_OR (341) 61
RIGHT_SHIFT_ASSIGNMENT (342) 73
NOT_EQUALS (343) 51
BITWISE_AND_ASSIGNMENT (344) 74
BITWISE_OR_ASSIGNMENT (345) 76
BITWISE_XOR_ASSIGNMENT (346) 75
INVALID_TOKEN (347)


Nonterminals, with rules where they appear

$accept (93)
    on left: 0
primary_expression (94)
    on left: 1 2 3 4 5 6, on right: 7
postfix_expression (95)
    on left: 7 8 9 10 11 12 13 14 15, on right: 8 9 10 11 12 13 20
argument_expression_list_opt (96)
    on left: 16 17, on right: 9
argument_expression_list (97)
    on left: 18 19, on right: 16 19
unary_expression (98)
    on left: 20 21 22 23 24 25, on right: 21 22 24 32 65
unary_operator (99)
    on left: 26 27 28 29 30 31, on right: 23
cast_expression (100)
    on left: 32 33, on right: 23 33 34 35 36 37
multiplicative_expression (101)
    on left: 34 35 36 37, on right: 35 36 37 38 39 40
additive_expression (102)
    on left: 38 39 40, on right: 39 40 41 42 43
shift_expression (103)
    on left: 41 42 43, on right: 42 43 44 45 46 47 48
relational_expression (104)
    on left: 44 45 46 47 48, on right: 45 46 47 48 49 50 51
equality_expression (105)
    on left: 49 50 51, on right: 50 51 52 53
AND_expression (106)
    on left: 52 53, on right: 53 54 55
exclusive_OR_expression (107)
    on left: 54 55, on right: 55 56 57
inclusive_OR_expression (108)
    on left: 56 57, on right: 57 58 59
logical_AND_expression (109)
    on left: 58 59, on right: 59 60 61
logical_OR_expression (110)
    on left: 60 61, on right: 61 62 63
conditional_expression (111)
    on left: 62 63, on right: 63 64 79
assignment_expression (112)
    on left: 64 65, on right: 18 19 65 77 78 133 134 140 157
assignment_operator (113)
    on left: 66 67 68 69 70 71 72 73 74 75 76, on right: 65
expression (114)
    on left: 77 78, on right: 6 8 63 78 186 188 189 190 191 192
constant_expression (115)
    on left: 79, on right: 122 167 176
declaration (116)
    on left: 80, on right: 183 194 202 206 207
init_declarator_list_opt (117)
    on left: 81 82, on right: 80
declaration_specifiers (118)
    on left: 83 84 85 86, on right: 80 87 152 153 203
declaration_specifiers_opt (119)
    on left: 87 88, on right: 83 84 85 86
init_declarator_list (120)
    on left: 89 90, on right: 81 90
init_declarator (121)
    on left: 91 92, on right: 89 90
storage_class_specifier (122)
    on left: 93 94 95 96, on right: 83
type_specifier (123)
    on left: 97 98 99 100 101 102 103 104 105 106 107 108 109,
    on right: 84 110
specifier_qualifier_list (124)
    on left: 110 111, on right: 112 156
specifier_qualifier_list_opt (125)
    on left: 112 113, on right: 110 111
enum_specifier (126)
    on left: 114 115 116, on right: 109
identifier_opt (127)
    on left: 117 118, on right: 114 115
enumerator_list (128)
    on left: 119 120, on right: 114 115 120
enumerator (129)
    on left: 121 122, on right: 119 120
type_qualifier (130)
    on left: 123 124 125, on right: 85 111 146 147
function_specifier (131)
    on left: 126, on right: 86
declarator (132)
    on left: 127, on right: 91 92 131 152 203
pointer_opt (133)
    on left: 128 129, on right: 127
direct_declarator (134)
    on left: 130 131 132 133 134 135 136 137, on right: 127 132 133
    134 135 136 137
type_qualifier_list_opt (135)
    on left: 138 139, on right: 132 133 135 144 145
assignment_expression_opt (136)
    on left: 140 141, on right: 132
identifier_list_opt (137)
    on left: 142 143, on right: 137
pointer (138)
    on left: 144 145, on right: 128 145
type_qualifier_list (139)
    on left: 146 147, on right: 134 138 147
parameter_type_list (140)
    on left: 148 149, on right: 136
parameter_list (141)
    on left: 150 151, on right: 148 149 151
parameter_declaration (142)
    on left: 152 153, on right: 150 151
identifier_list (143)
    on left: 154 155, on right: 142 155
type_name (144)
    on left: 156, on right: 14 15 25 33
initialiser (145)
    on left: 157 158 159, on right: 92 160 161
initialiser_list (146)
    on left: 160 161, on right: 14 15 158 159 161
designation_opt (147)
    on left: 162 163, on right: 160 161
designation (148)
    on left: 164, on right: 162
designator_list (149)
    on left: 165 166, on right: 164 166
designator (150)
    on left: 167 168, on right: 165 166
statement (151)
    on left: 169 170 171 172 173 174, on right: 175 176 177 184 188
    189 190 191 192 193 194
labeled_statement (152)
    on left: 175 176 177, on right: 169
compound_statement (153)
    on left: 178, on right: 170 203
block_item_list_opt (154)
    on left: 179 180, on right: 178
block_item_list (155)
    on left: 181 182, on right: 179 182
block_item (156)
    on left: 183 184, on right: 181 182
expression_statement (157)
    on left: 185, on right: 171
expression_opt (158)
    on left: 186 187, on right: 185 193 194 198
selection_statement (159)
    on left: 188 189 190, on right: 172
iteration_statement (160)
    on left: 191 192 193 194, on right: 173
jump_statement (161)
    on left: 195 196 197 198, on right: 174
translation_unit (162)
    on left: 199 200, on right: 0 200
external_declaration (163)
    on left: 201 202, on right: 199 200
function_definition (164)
    on left: 203, on right: 201
declaration_list_opt (165)
    on left: 204 205, on right: 203
declaration_list (166)
    on left: 206 207, on right: 204 207


state 0

    0 $accept: . translation_unit $end

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    translation_unit         go to state 29
    external_declaration     go to state 30
    function_definition      go to state 31


state 1

   95 storage_class_specifier: AUTO .

    $default  reduce using rule 95 (storage_class_specifier)


state 2

   98 type_specifier: CHAR .

    $default  reduce using rule 98 (type_specifier)


state 3

  123 type_qualifier: CONST .

    $default  reduce using rule 123 (type_qualifier)


state 4

  103 type_specifier: DOUBLE .

    $default  reduce using rule 103 (type_specifier)


state 5

  114 enum_specifier: ENUM . identifier_opt LEFT_CURLY_BRACKET enumerator_list RIGHT_CURLY_BRACKET
  115               | ENUM . identifier_opt LEFT_CURLY_BRACKET enumerator_list COMMA RIGHT_CURLY_BRACKET
  116               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 118 (identifier_opt)

    identifier_opt  go to state 33


state 6

   93 storage_class_specifier: EXTERN .

    $default  reduce using rule 93 (storage_class_specifier)


state 7

  102 type_specifier: FLOAT .

    $default  reduce using rule 102 (type_specifier)


state 8

  126 function_specifier: INLINE .

    $default  reduce using rule 126 (function_specifier)


state 9

  100 type_specifier: INT .

    $default  reduce using rule 100 (type_specifier)


state 10

  101 type_specifier: LONG .

    $default  reduce using rule 101 (type_specifier)


state 11

   96 storage_class_specifier: REGISTER .

    $default  reduce using rule 96 (storage_class_specifier)


state 12

  124 type_qualifier: RESTRICT .

    $default  reduce using rule 124 (type_qualifier)


state 13

   99 type_specifier: SHORT .

    $default  reduce using rule 99 (type_specifier)


state 14

  104 type_specifier: SIGNED .

    $default  reduce using rule 104 (type_specifier)


state 15

   94 storage_class_specifier: STATIC .

    $default  reduce using rule 94 (storage_class_specifier)


state 16

  105 type_specifier: UNSIGNED .

    $default  reduce using rule 105 (type_specifier)


state 17

   97 type_specifier: VOID .

    $default  reduce using rule 97 (type_specifier)


state 18

  125 type_qualifier: VOLATILE .

    $default  reduce using rule 125 (type_qualifier)


state 19

  106 type_specifier: _BOOL .

    $default  reduce using rule 106 (type_specifier)


state 20

  107 type_specifier: _COMPLEX .

    $default  reduce using rule 107 (type_specifier)


state 21

  108 type_specifier: _IMAGINARY .

    $default  reduce using rule 108 (type_specifier)


state 22

  202 external_declaration: declaration .

    $default  reduce using rule 202 (external_declaration)


state 23

   80 declaration: declaration_specifiers . init_declarator_list_opt SEMI_COLON
  203 function_definition: declaration_specifiers . declarator declaration_list_opt compound_statement

    ASTERISK  shift, and go to state 34

    SEMI_COLON  reduce using rule 82 (init_declarator_list_opt)
    $default    reduce using rule 129 (pointer_opt)

    init_declarator_list_opt  go to state 35
    init_declarator_list      go to state 36
    init_declarator           go to state 37
    declarator                go to state 38
    pointer_opt               go to state 39
    pointer                   go to state 40


state 24

   83 declaration_specifiers: storage_class_specifier . declaration_specifiers_opt

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 88 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 42
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


state 25

   84 declaration_specifiers: type_specifier . declaration_specifiers_opt

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 88 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 43
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


state 26

  109 type_specifier: enum_specifier .

    $default  reduce using rule 109 (type_specifier)


state 27

   85 declaration_specifiers: type_qualifier . declaration_specifiers_opt

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 88 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 44
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


state 28

   86 declaration_specifiers: function_specifier . declaration_specifiers_opt

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 88 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 45
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


state 29

    0 $accept: translation_unit . $end
  200 translation_unit: translation_unit . external_declaration

    $end        shift, and go to state 46
    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    external_declaration     go to state 47
    function_definition      go to state 31


state 30

  199 translation_unit: external_declaration .

    $default  reduce using rule 199 (translation_unit)


state 31

  201 external_declaration: function_definition .

    $default  reduce using rule 201 (external_declaration)


state 32

  116 enum_specifier: ENUM IDENTIFIER .
  117 identifier_opt: IDENTIFIER .

    LEFT_CURLY_BRACKET  reduce using rule 117 (identifier_opt)
    $default            reduce using rule 116 (enum_specifier)


state 33

  114 enum_specifier: ENUM identifier_opt . LEFT_CURLY_BRACKET enumerator_list RIGHT_CURLY_BRACKET
  115               | ENUM identifier_opt . LEFT_CURLY_BRACKET enumerator_list COMMA RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 48


state 34

  144 pointer: ASTERISK . type_qualifier_list_opt
  145        | ASTERISK . type_qualifier_list_opt pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 139 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 50
    type_qualifier_list      go to state 51


state 35

   80 declaration: declaration_specifiers init_declarator_list_opt . SEMI_COLON

    SEMI_COLON  shift, and go to state 52


state 36

   81 init_declarator_list_opt: init_declarator_list .
   90 init_declarator_list: init_declarator_list . COMMA init_declarator

    COMMA  shift, and go to state 53

    $default  reduce using rule 81 (init_declarator_list_opt)


state 37

   89 init_declarator_list: init_declarator .

    $default  reduce using rule 89 (init_declarator_list)


state 38

   91 init_declarator: declarator .
   92                | declarator . ASSIGNMENT initialiser
  203 function_definition: declaration_specifiers declarator . declaration_list_opt compound_statement

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21
    ASSIGNMENT  shift, and go to state 54

    LEFT_CURLY_BRACKET  reduce using rule 205 (declaration_list_opt)
    $default            reduce using rule 91 (init_declarator)

    declaration              go to state 55
    declaration_specifiers   go to state 56
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    declaration_list_opt     go to state 57
    declaration_list         go to state 58


state 39

  127 declarator: pointer_opt . direct_declarator

    IDENTIFIER        shift, and go to state 59
    LEFT_PARENTHESES  shift, and go to state 60

    direct_declarator  go to state 61


state 40

  128 pointer_opt: pointer .

    $default  reduce using rule 128 (pointer_opt)


state 41

   87 declaration_specifiers_opt: declaration_specifiers .

    $default  reduce using rule 87 (declaration_specifiers_opt)


state 42

   83 declaration_specifiers: storage_class_specifier declaration_specifiers_opt .

    $default  reduce using rule 83 (declaration_specifiers)


state 43

   84 declaration_specifiers: type_specifier declaration_specifiers_opt .

    $default  reduce using rule 84 (declaration_specifiers)


state 44

   85 declaration_specifiers: type_qualifier declaration_specifiers_opt .

    $default  reduce using rule 85 (declaration_specifiers)


state 45

   86 declaration_specifiers: function_specifier declaration_specifiers_opt .

    $default  reduce using rule 86 (declaration_specifiers)


state 46

    0 $accept: translation_unit $end .

    $default  accept


state 47

  200 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 200 (translation_unit)


state 48

  114 enum_specifier: ENUM identifier_opt LEFT_CURLY_BRACKET . enumerator_list RIGHT_CURLY_BRACKET
  115               | ENUM identifier_opt LEFT_CURLY_BRACKET . enumerator_list COMMA RIGHT_CURLY_BRACKET

    IDENTIFIER  shift, and go to state 62

    enumerator_list  go to state 63
    enumerator       go to state 64


state 49

  146 type_qualifier_list: type_qualifier .

    $default  reduce using rule 146 (type_qualifier_list)


state 50

  144 pointer: ASTERISK type_qualifier_list_opt .
  145        | ASTERISK type_qualifier_list_opt . pointer

    ASTERISK  shift, and go to state 34

    $default  reduce using rule 144 (pointer)

    pointer  go to state 65


state 51

  138 type_qualifier_list_opt: type_qualifier_list .
  147 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 138 (type_qualifier_list_opt)

    type_qualifier  go to state 66


state 52

   80 declaration: declaration_specifiers init_declarator_list_opt SEMI_COLON .

    $default  reduce using rule 80 (declaration)


state 53

   90 init_declarator_list: init_declarator_list COMMA . init_declarator

    ASTERISK  shift, and go to state 34

    $default  reduce using rule 129 (pointer_opt)

    init_declarator  go to state 67
    declarator       go to state 68
    pointer_opt      go to state 39
    pointer          go to state 40


state 54

   92 init_declarator: declarator ASSIGNMENT . initialiser

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    LEFT_CURLY_BRACKET  shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 101
    initialiser                go to state 102


state 55

  206 declaration_list: declaration .

    $default  reduce using rule 206 (declaration_list)


state 56

   80 declaration: declaration_specifiers . init_declarator_list_opt SEMI_COLON

    ASTERISK  shift, and go to state 34

    SEMI_COLON  reduce using rule 82 (init_declarator_list_opt)
    $default    reduce using rule 129 (pointer_opt)

    init_declarator_list_opt  go to state 35
    init_declarator_list      go to state 36
    init_declarator           go to state 37
    declarator                go to state 68
    pointer_opt               go to state 39
    pointer                   go to state 40


state 57

  203 function_definition: declaration_specifiers declarator declaration_list_opt . compound_statement

    LEFT_CURLY_BRACKET  shift, and go to state 103

    compound_statement  go to state 104


state 58

  204 declaration_list_opt: declaration_list .
  207 declaration_list: declaration_list . declaration

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 204 (declaration_list_opt)

    declaration              go to state 105
    declaration_specifiers   go to state 56
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


state 59

  130 direct_declarator: IDENTIFIER .

    $default  reduce using rule 130 (direct_declarator)


state 60

  131 direct_declarator: LEFT_PARENTHESES . declarator RIGHT_PARENTHESES

    ASTERISK  shift, and go to state 34

    $default  reduce using rule 129 (pointer_opt)

    declarator   go to state 106
    pointer_opt  go to state 39
    pointer      go to state 40


state 61

  127 declarator: pointer_opt direct_declarator .
  132 direct_declarator: direct_declarator . LEFT_SQUARE_BRACKET type_qualifier_list_opt assignment_expression_opt RIGHT_SQUARE_BRACKET
  133                  | direct_declarator . LEFT_SQUARE_BRACKET STATIC type_qualifier_list_opt assignment_expression RIGHT_SQUARE_BRACKET
  134                  | direct_declarator . LEFT_SQUARE_BRACKET type_qualifier_list STATIC assignment_expression RIGHT_SQUARE_BRACKET
  135                  | direct_declarator . LEFT_SQUARE_BRACKET type_qualifier_list_opt ASTERISK RIGHT_SQUARE_BRACKET
  136                  | direct_declarator . LEFT_PARENTHESES parameter_type_list RIGHT_PARENTHESES
  137                  | direct_declarator . LEFT_PARENTHESES identifier_list_opt RIGHT_PARENTHESES

    LEFT_SQUARE_BRACKET  shift, and go to state 107
    LEFT_PARENTHESES     shift, and go to state 108

    $default  reduce using rule 127 (declarator)


state 62

  121 enumerator: IDENTIFIER .
  122           | IDENTIFIER . ASSIGNMENT constant_expression

    ASSIGNMENT  shift, and go to state 109

    $default  reduce using rule 121 (enumerator)


state 63

  114 enum_specifier: ENUM identifier_opt LEFT_CURLY_BRACKET enumerator_list . RIGHT_CURLY_BRACKET
  115               | ENUM identifier_opt LEFT_CURLY_BRACKET enumerator_list . COMMA RIGHT_CURLY_BRACKET
  120 enumerator_list: enumerator_list . COMMA enumerator

    COMMA                shift, and go to state 110
    RIGHT_CURLY_BRACKET  shift, and go to state 111


state 64

  119 enumerator_list: enumerator .

    $default  reduce using rule 119 (enumerator_list)


state 65

  145 pointer: ASTERISK type_qualifier_list_opt pointer .

    $default  reduce using rule 145 (pointer)


state 66

  147 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 147 (type_qualifier_list)


state 67

   90 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 90 (init_declarator_list)


state 68

   91 init_declarator: declarator .
   92                | declarator . ASSIGNMENT initialiser

    ASSIGNMENT  shift, and go to state 54

    $default  reduce using rule 91 (init_declarator)


state 69

   24 unary_expression: SIZEOF . unary_expression
   25                 | SIZEOF . LEFT_PARENTHESES type_name RIGHT_PARENTHESES

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 112
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 113
    unary_operator      go to state 88


state 70

    1 primary_expression: IDENTIFIER .

    $default  reduce using rule 1 (primary_expression)


state 71

    2 primary_expression: INTEGER_CONSTANT .

    $default  reduce using rule 2 (primary_expression)


state 72

    3 primary_expression: FLOATING_CONSTANT .

    $default  reduce using rule 3 (primary_expression)


state 73

    4 primary_expression: CHARACTER_CONSTANT .

    $default  reduce using rule 4 (primary_expression)


state 74

    5 primary_expression: STRING_LITERAL .

    $default  reduce using rule 5 (primary_expression)


state 75

   21 unary_expression: INCREMENT . unary_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 114
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 115
    unary_operator      go to state 88


state 76

    6 primary_expression: LEFT_PARENTHESES . expression RIGHT_PARENTHESES
   14 postfix_expression: LEFT_PARENTHESES . type_name RIGHT_PARENTHESES LEFT_CURLY_BRACKET initialiser_list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESES . type_name RIGHT_PARENTHESES LEFT_CURLY_BRACKET initialiser_list COMMA RIGHT_CURLY_BRACKET
   33 cast_expression: LEFT_PARENTHESES . type_name RIGHT_PARENTHESES cast_expression

    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    FLOAT               shift, and go to state 7
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    RESTRICT            shift, and go to state 12
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 69
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 117
    type_specifier             go to state 118
    specifier_qualifier_list   go to state 119
    enum_specifier             go to state 26
    type_qualifier             go to state 120
    type_name                  go to state 121


state 77

  158 initialiser: LEFT_CURLY_BRACKET . initialiser_list RIGHT_CURLY_BRACKET
  159            | LEFT_CURLY_BRACKET . initialiser_list COMMA RIGHT_CURLY_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 122
    DOT                  shift, and go to state 123

    $default  reduce using rule 163 (designation_opt)

    initialiser_list  go to state 124
    designation_opt   go to state 125
    designation       go to state 126
    designator_list   go to state 127
    designator        go to state 128


state 78

   27 unary_operator: ASTERISK .

    $default  reduce using rule 27 (unary_operator)


state 79

   28 unary_operator: PLUS .

    $default  reduce using rule 28 (unary_operator)


state 80

   29 unary_operator: MINUS .

    $default  reduce using rule 29 (unary_operator)


state 81

   30 unary_operator: TILDE .

    $default  reduce using rule 30 (unary_operator)


state 82

   31 unary_operator: EXCLAMATION .

    $default  reduce using rule 31 (unary_operator)


state 83

   22 unary_expression: DECREMENT . unary_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 114
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 129
    unary_operator      go to state 88


state 84

   26 unary_operator: BITWISE_AND .

    $default  reduce using rule 26 (unary_operator)


state 85

    7 postfix_expression: primary_expression .

    $default  reduce using rule 7 (postfix_expression)


state 86

    8 postfix_expression: postfix_expression . LEFT_SQUARE_BRACKET expression RIGHT_SQUARE_BRACKET
    9                   | postfix_expression . LEFT_PARENTHESES argument_expression_list_opt RIGHT_PARENTHESES
   10                   | postfix_expression . DOT IDENTIFIER
   11                   | postfix_expression . ARROW IDENTIFIER
   12                   | postfix_expression . INCREMENT
   13                   | postfix_expression . DECREMENT
   20 unary_expression: postfix_expression .

    LEFT_SQUARE_BRACKET  shift, and go to state 130
    INCREMENT            shift, and go to state 131
    LEFT_PARENTHESES     shift, and go to state 132
    DOT                  shift, and go to state 133
    ARROW                shift, and go to state 134
    DECREMENT            shift, and go to state 135

    $default  reduce using rule 20 (unary_expression)


state 87

   32 cast_expression: unary_expression .
   65 assignment_expression: unary_expression . assignment_operator assignment_expression

    ASSIGNMENT              shift, and go to state 136
    ASTERISK_ASSIGNMENT     shift, and go to state 137
    SLASH_ASSIGNMENT        shift, and go to state 138
    MODULO_ASSIGNMENT       shift, and go to state 139
    PLUS_ASSIGNMENT         shift, and go to state 140
    MINUS_ASSIGNMENT        shift, and go to state 141
    LEFT_SHIFT_ASSIGNMENT   shift, and go to state 142
    RIGHT_SHIFT_ASSIGNMENT  shift, and go to state 143
    BITWISE_AND_ASSIGNMENT  shift, and go to state 144
    BITWISE_OR_ASSIGNMENT   shift, and go to state 145
    BITWISE_XOR_ASSIGNMENT  shift, and go to state 146

    $default  reduce using rule 32 (cast_expression)

    assignment_operator  go to state 147


state 88

   23 unary_expression: unary_operator . cast_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 148
    unary_operator      go to state 88
    cast_expression     go to state 149


state 89

   34 multiplicative_expression: cast_expression .

    $default  reduce using rule 34 (multiplicative_expression)


state 90

   35 multiplicative_expression: multiplicative_expression . ASTERISK cast_expression
   36                          | multiplicative_expression . SLASH cast_expression
   37                          | multiplicative_expression . MODULO cast_expression
   38 additive_expression: multiplicative_expression .

    SLASH     shift, and go to state 150
    ASTERISK  shift, and go to state 151
    MODULO    shift, and go to state 152

    $default  reduce using rule 38 (additive_expression)


state 91

   39 additive_expression: additive_expression . PLUS multiplicative_expression
   40                    | additive_expression . MINUS multiplicative_expression
   41 shift_expression: additive_expression .

    PLUS   shift, and go to state 153
    MINUS  shift, and go to state 154

    $default  reduce using rule 41 (shift_expression)


state 92

   42 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   43                 | shift_expression . RIGHT_SHIFT additive_expression
   44 relational_expression: shift_expression .

    LEFT_SHIFT   shift, and go to state 155
    RIGHT_SHIFT  shift, and go to state 156

    $default  reduce using rule 44 (relational_expression)


state 93

   45 relational_expression: relational_expression . LESS_THAN shift_expression
   46                      | relational_expression . GREATER_THAN shift_expression
   47                      | relational_expression . LESS_EQUAL_THAN shift_expression
   48                      | relational_expression . GREATER_EQUAL_THAN shift_expression
   49 equality_expression: relational_expression .

    LESS_THAN           shift, and go to state 157
    GREATER_THAN        shift, and go to state 158
    LESS_EQUAL_THAN     shift, and go to state 159
    GREATER_EQUAL_THAN  shift, and go to state 160

    $default  reduce using rule 49 (equality_expression)


state 94

   50 equality_expression: equality_expression . EQUALS relational_expression
   51                    | equality_expression . NOT_EQUALS relational_expression
   52 AND_expression: equality_expression .

    EQUALS      shift, and go to state 161
    NOT_EQUALS  shift, and go to state 162

    $default  reduce using rule 52 (AND_expression)


state 95

   53 AND_expression: AND_expression . BITWISE_AND equality_expression
   54 exclusive_OR_expression: AND_expression .

    BITWISE_AND  shift, and go to state 163

    $default  reduce using rule 54 (exclusive_OR_expression)


state 96

   55 exclusive_OR_expression: exclusive_OR_expression . BITWISE_XOR AND_expression
   56 inclusive_OR_expression: exclusive_OR_expression .

    BITWISE_XOR  shift, and go to state 164

    $default  reduce using rule 56 (inclusive_OR_expression)


state 97

   57 inclusive_OR_expression: inclusive_OR_expression . BITWISE_OR exclusive_OR_expression
   58 logical_AND_expression: inclusive_OR_expression .

    BITWISE_OR  shift, and go to state 165

    $default  reduce using rule 58 (logical_AND_expression)


state 98

   59 logical_AND_expression: logical_AND_expression . LOGICAL_AND inclusive_OR_expression
   60 logical_OR_expression: logical_AND_expression .

    LOGICAL_AND  shift, and go to state 166

    $default  reduce using rule 60 (logical_OR_expression)


state 99

   61 logical_OR_expression: logical_OR_expression . LOGICAL_OR logical_AND_expression
   62 conditional_expression: logical_OR_expression .
   63                       | logical_OR_expression . QUESTION_MARK expression COLON conditional_expression

    QUESTION_MARK  shift, and go to state 167
    LOGICAL_OR     shift, and go to state 168

    $default  reduce using rule 62 (conditional_expression)


state 100

   64 assignment_expression: conditional_expression .

    $default  reduce using rule 64 (assignment_expression)


state 101

  157 initialiser: assignment_expression .

    $default  reduce using rule 157 (initialiser)


state 102

   92 init_declarator: declarator ASSIGNMENT initialiser .

    $default  reduce using rule 92 (init_declarator)


state 103

  178 compound_statement: LEFT_CURLY_BRACKET . block_item_list_opt RIGHT_CURLY_BRACKET

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 169
    CASE                shift, and go to state 170
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 171
    DEFAULT             shift, and go to state 172
    DO                  shift, and go to state 173
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    EXTERN              shift, and go to state 6
    FLOAT               shift, and go to state 7
    FOR                 shift, and go to state 174
    GOTO                shift, and go to state 175
    IF                  shift, and go to state 176
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    REGISTER            shift, and go to state 11
    RESTRICT            shift, and go to state 12
    RETURN              shift, and go to state 177
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 69
    STATIC              shift, and go to state 15
    SWITCH              shift, and go to state 178
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 179
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 180
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    LEFT_CURLY_BRACKET  shift, and go to state 103
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    SEMI_COLON  reduce using rule 187 (expression_opt)
    $default    reduce using rule 180 (block_item_list_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 181
    declaration                go to state 182
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 183
    labeled_statement          go to state 184
    compound_statement         go to state 185
    block_item_list_opt        go to state 186
    block_item_list            go to state 187
    block_item                 go to state 188
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


state 104

  203 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement .

    $default  reduce using rule 203 (function_definition)


state 105

  207 declaration_list: declaration_list declaration .

    $default  reduce using rule 207 (declaration_list)


state 106

  131 direct_declarator: LEFT_PARENTHESES declarator . RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 194


state 107

  132 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET . type_qualifier_list_opt assignment_expression_opt RIGHT_SQUARE_BRACKET
  133                  | direct_declarator LEFT_SQUARE_BRACKET . STATIC type_qualifier_list_opt assignment_expression RIGHT_SQUARE_BRACKET
  134                  | direct_declarator LEFT_SQUARE_BRACKET . type_qualifier_list STATIC assignment_expression RIGHT_SQUARE_BRACKET
  135                  | direct_declarator LEFT_SQUARE_BRACKET . type_qualifier_list_opt ASTERISK RIGHT_SQUARE_BRACKET

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    STATIC    shift, and go to state 195
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 139 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 196
    type_qualifier_list      go to state 197


state 108

  136 direct_declarator: direct_declarator LEFT_PARENTHESES . parameter_type_list RIGHT_PARENTHESES
  137                  | direct_declarator LEFT_PARENTHESES . identifier_list_opt RIGHT_PARENTHESES

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21
    IDENTIFIER  shift, and go to state 198

    $default  reduce using rule 143 (identifier_list_opt)

    declaration_specifiers   go to state 199
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    identifier_list_opt      go to state 200
    parameter_type_list      go to state 201
    parameter_list           go to state 202
    parameter_declaration    go to state 203
    identifier_list          go to state 204


state 109

  122 enumerator: IDENTIFIER ASSIGNMENT . constant_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 205
    constant_expression        go to state 206


state 110

  115 enum_specifier: ENUM identifier_opt LEFT_CURLY_BRACKET enumerator_list COMMA . RIGHT_CURLY_BRACKET
  120 enumerator_list: enumerator_list COMMA . enumerator

    IDENTIFIER           shift, and go to state 62
    RIGHT_CURLY_BRACKET  shift, and go to state 207

    enumerator  go to state 208


state 111

  114 enum_specifier: ENUM identifier_opt LEFT_CURLY_BRACKET enumerator_list RIGHT_CURLY_BRACKET .

    $default  reduce using rule 114 (enum_specifier)


state 112

    6 primary_expression: LEFT_PARENTHESES . expression RIGHT_PARENTHESES
   14 postfix_expression: LEFT_PARENTHESES . type_name RIGHT_PARENTHESES LEFT_CURLY_BRACKET initialiser_list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESES . type_name RIGHT_PARENTHESES LEFT_CURLY_BRACKET initialiser_list COMMA RIGHT_CURLY_BRACKET
   25 unary_expression: SIZEOF LEFT_PARENTHESES . type_name RIGHT_PARENTHESES

    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    FLOAT               shift, and go to state 7
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    RESTRICT            shift, and go to state 12
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 69
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 117
    type_specifier             go to state 118
    specifier_qualifier_list   go to state 119
    enum_specifier             go to state 26
    type_qualifier             go to state 120
    type_name                  go to state 209


state 113

   24 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 24 (unary_expression)


state 114

    6 primary_expression: LEFT_PARENTHESES . expression RIGHT_PARENTHESES
   14 postfix_expression: LEFT_PARENTHESES . type_name RIGHT_PARENTHESES LEFT_CURLY_BRACKET initialiser_list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESES . type_name RIGHT_PARENTHESES LEFT_CURLY_BRACKET initialiser_list COMMA RIGHT_CURLY_BRACKET

    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    FLOAT               shift, and go to state 7
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    RESTRICT            shift, and go to state 12
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 69
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 117
    type_specifier             go to state 118
    specifier_qualifier_list   go to state 119
    enum_specifier             go to state 26
    type_qualifier             go to state 120
    type_name                  go to state 210


state 115

   21 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 21 (unary_expression)


state 116

   77 expression: assignment_expression .

    $default  reduce using rule 77 (expression)


state 117

    6 primary_expression: LEFT_PARENTHESES expression . RIGHT_PARENTHESES
   78 expression: expression . COMMA assignment_expression

    COMMA              shift, and go to state 211
    RIGHT_PARENTHESES  shift, and go to state 212


state 118

  110 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    FLOAT       shift, and go to state 7
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 113 (specifier_qualifier_list_opt)

    type_specifier                go to state 118
    specifier_qualifier_list      go to state 213
    specifier_qualifier_list_opt  go to state 214
    enum_specifier                go to state 26
    type_qualifier                go to state 120


state 119

  156 type_name: specifier_qualifier_list .

    $default  reduce using rule 156 (type_name)


state 120

  111 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    FLOAT       shift, and go to state 7
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 113 (specifier_qualifier_list_opt)

    type_specifier                go to state 118
    specifier_qualifier_list      go to state 213
    specifier_qualifier_list_opt  go to state 215
    enum_specifier                go to state 26
    type_qualifier                go to state 120


state 121

   14 postfix_expression: LEFT_PARENTHESES type_name . RIGHT_PARENTHESES LEFT_CURLY_BRACKET initialiser_list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESES type_name . RIGHT_PARENTHESES LEFT_CURLY_BRACKET initialiser_list COMMA RIGHT_CURLY_BRACKET
   33 cast_expression: LEFT_PARENTHESES type_name . RIGHT_PARENTHESES cast_expression

    RIGHT_PARENTHESES  shift, and go to state 216


state 122

  167 designator: LEFT_SQUARE_BRACKET . constant_expression RIGHT_SQUARE_BRACKET

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 205
    constant_expression        go to state 217


state 123

  168 designator: DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 218


state 124

  158 initialiser: LEFT_CURLY_BRACKET initialiser_list . RIGHT_CURLY_BRACKET
  159            | LEFT_CURLY_BRACKET initialiser_list . COMMA RIGHT_CURLY_BRACKET
  161 initialiser_list: initialiser_list . COMMA designation_opt initialiser

    COMMA                shift, and go to state 219
    RIGHT_CURLY_BRACKET  shift, and go to state 220


state 125

  160 initialiser_list: designation_opt . initialiser

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    LEFT_CURLY_BRACKET  shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 101
    initialiser                go to state 221


state 126

  162 designation_opt: designation .

    $default  reduce using rule 162 (designation_opt)


state 127

  164 designation: designator_list . ASSIGNMENT
  166 designator_list: designator_list . designator

    LEFT_SQUARE_BRACKET  shift, and go to state 122
    ASSIGNMENT           shift, and go to state 222
    DOT                  shift, and go to state 123

    designator  go to state 223


state 128

  165 designator_list: designator .

    $default  reduce using rule 165 (designator_list)


state 129

   22 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 22 (unary_expression)


state 130

    8 postfix_expression: postfix_expression LEFT_SQUARE_BRACKET . expression RIGHT_SQUARE_BRACKET

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 224


state 131

   12 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 12 (postfix_expression)


state 132

    9 postfix_expression: postfix_expression LEFT_PARENTHESES . argument_expression_list_opt RIGHT_PARENTHESES

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    $default  reduce using rule 17 (argument_expression_list_opt)

    primary_expression            go to state 85
    postfix_expression            go to state 86
    argument_expression_list_opt  go to state 225
    argument_expression_list      go to state 226
    unary_expression              go to state 87
    unary_operator                go to state 88
    cast_expression               go to state 89
    multiplicative_expression     go to state 90
    additive_expression           go to state 91
    shift_expression              go to state 92
    relational_expression         go to state 93
    equality_expression           go to state 94
    AND_expression                go to state 95
    exclusive_OR_expression       go to state 96
    inclusive_OR_expression       go to state 97
    logical_AND_expression        go to state 98
    logical_OR_expression         go to state 99
    conditional_expression        go to state 100
    assignment_expression         go to state 227


state 133

   10 postfix_expression: postfix_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 228


state 134

   11 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 229


state 135

   13 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 13 (postfix_expression)


state 136

   66 assignment_operator: ASSIGNMENT .

    $default  reduce using rule 66 (assignment_operator)


state 137

   67 assignment_operator: ASTERISK_ASSIGNMENT .

    $default  reduce using rule 67 (assignment_operator)


state 138

   68 assignment_operator: SLASH_ASSIGNMENT .

    $default  reduce using rule 68 (assignment_operator)


state 139

   69 assignment_operator: MODULO_ASSIGNMENT .

    $default  reduce using rule 69 (assignment_operator)


state 140

   70 assignment_operator: PLUS_ASSIGNMENT .

    $default  reduce using rule 70 (assignment_operator)


state 141

   71 assignment_operator: MINUS_ASSIGNMENT .

    $default  reduce using rule 71 (assignment_operator)


state 142

   72 assignment_operator: LEFT_SHIFT_ASSIGNMENT .

    $default  reduce using rule 72 (assignment_operator)


state 143

   73 assignment_operator: RIGHT_SHIFT_ASSIGNMENT .

    $default  reduce using rule 73 (assignment_operator)


state 144

   74 assignment_operator: BITWISE_AND_ASSIGNMENT .

    $default  reduce using rule 74 (assignment_operator)


state 145

   76 assignment_operator: BITWISE_OR_ASSIGNMENT .

    $default  reduce using rule 76 (assignment_operator)


state 146

   75 assignment_operator: BITWISE_XOR_ASSIGNMENT .

    $default  reduce using rule 75 (assignment_operator)


state 147

   65 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 230


state 148

   32 cast_expression: unary_expression .

    $default  reduce using rule 32 (cast_expression)


state 149

   23 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 23 (unary_expression)


state 150

   36 multiplicative_expression: multiplicative_expression SLASH . cast_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 148
    unary_operator      go to state 88
    cast_expression     go to state 231


state 151

   35 multiplicative_expression: multiplicative_expression ASTERISK . cast_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 148
    unary_operator      go to state 88
    cast_expression     go to state 232


state 152

   37 multiplicative_expression: multiplicative_expression MODULO . cast_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 148
    unary_operator      go to state 88
    cast_expression     go to state 233


state 153

   39 additive_expression: additive_expression PLUS . multiplicative_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 234


state 154

   40 additive_expression: additive_expression MINUS . multiplicative_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 235


state 155

   42 shift_expression: shift_expression LEFT_SHIFT . additive_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 236


state 156

   43 shift_expression: shift_expression RIGHT_SHIFT . additive_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 237


state 157

   45 relational_expression: relational_expression LESS_THAN . shift_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 238


state 158

   46 relational_expression: relational_expression GREATER_THAN . shift_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 239


state 159

   47 relational_expression: relational_expression LESS_EQUAL_THAN . shift_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 240


state 160

   48 relational_expression: relational_expression GREATER_EQUAL_THAN . shift_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 241


state 161

   50 equality_expression: equality_expression EQUALS . relational_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 242


state 162

   51 equality_expression: equality_expression NOT_EQUALS . relational_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 243


state 163

   53 AND_expression: AND_expression BITWISE_AND . equality_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 244


state 164

   55 exclusive_OR_expression: exclusive_OR_expression BITWISE_XOR . AND_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 245


state 165

   57 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR . exclusive_OR_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 246


state 166

   59 logical_AND_expression: logical_AND_expression LOGICAL_AND . inclusive_OR_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 247


state 167

   63 conditional_expression: logical_OR_expression QUESTION_MARK . expression COLON conditional_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 248


state 168

   61 logical_OR_expression: logical_OR_expression LOGICAL_OR . logical_AND_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 249


state 169

  197 jump_statement: BREAK . SEMI_COLON

    SEMI_COLON  shift, and go to state 250


state 170

  176 labeled_statement: CASE . constant_expression COLON statement

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 205
    constant_expression        go to state 251


state 171

  196 jump_statement: CONTINUE . SEMI_COLON

    SEMI_COLON  shift, and go to state 252


state 172

  177 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 253


state 173

  192 iteration_statement: DO . statement WHILE LEFT_PARENTHESES expression RIGHT_PARENTHESES SEMI_COLON

    BREAK               shift, and go to state 169
    CASE                shift, and go to state 170
    CONTINUE            shift, and go to state 171
    DEFAULT             shift, and go to state 172
    DO                  shift, and go to state 173
    FOR                 shift, and go to state 174
    GOTO                shift, and go to state 175
    IF                  shift, and go to state 176
    RETURN              shift, and go to state 177
    SIZEOF              shift, and go to state 69
    SWITCH              shift, and go to state 178
    WHILE               shift, and go to state 179
    IDENTIFIER          shift, and go to state 180
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    LEFT_CURLY_BRACKET  shift, and go to state 103
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 181
    statement                  go to state 254
    labeled_statement          go to state 184
    compound_statement         go to state 185
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


state 174

  193 iteration_statement: FOR . LEFT_PARENTHESES expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt RIGHT_PARENTHESES statement
  194                    | FOR . LEFT_PARENTHESES declaration expression_opt SEMI_COLON expression_opt RIGHT_PARENTHESES statement

    LEFT_PARENTHESES  shift, and go to state 255


state 175

  195 jump_statement: GOTO . IDENTIFIER SEMI_COLON

    IDENTIFIER  shift, and go to state 256


state 176

  188 selection_statement: IF . LEFT_PARENTHESES expression RIGHT_PARENTHESES statement
  189                    | IF . LEFT_PARENTHESES expression RIGHT_PARENTHESES statement ELSE statement

    LEFT_PARENTHESES  shift, and go to state 257


state 177

  198 jump_statement: RETURN . expression_opt SEMI_COLON

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 181
    expression_opt             go to state 258


state 178

  190 selection_statement: SWITCH . LEFT_PARENTHESES expression RIGHT_PARENTHESES statement

    LEFT_PARENTHESES  shift, and go to state 259


state 179

  191 iteration_statement: WHILE . LEFT_PARENTHESES expression RIGHT_PARENTHESES statement

    LEFT_PARENTHESES  shift, and go to state 260


state 180

    1 primary_expression: IDENTIFIER .
  175 labeled_statement: IDENTIFIER . COLON statement

    COLON  shift, and go to state 261

    $default  reduce using rule 1 (primary_expression)


state 181

   78 expression: expression . COMMA assignment_expression
  186 expression_opt: expression .

    COMMA  shift, and go to state 211

    $default  reduce using rule 186 (expression_opt)


state 182

  183 block_item: declaration .

    $default  reduce using rule 183 (block_item)


state 183

  184 block_item: statement .

    $default  reduce using rule 184 (block_item)


state 184

  169 statement: labeled_statement .

    $default  reduce using rule 169 (statement)


state 185

  170 statement: compound_statement .

    $default  reduce using rule 170 (statement)


state 186

  178 compound_statement: LEFT_CURLY_BRACKET block_item_list_opt . RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 262


state 187

  179 block_item_list_opt: block_item_list .
  182 block_item_list: block_item_list . block_item

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 169
    CASE                shift, and go to state 170
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 171
    DEFAULT             shift, and go to state 172
    DO                  shift, and go to state 173
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    EXTERN              shift, and go to state 6
    FLOAT               shift, and go to state 7
    FOR                 shift, and go to state 174
    GOTO                shift, and go to state 175
    IF                  shift, and go to state 176
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    REGISTER            shift, and go to state 11
    RESTRICT            shift, and go to state 12
    RETURN              shift, and go to state 177
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 69
    STATIC              shift, and go to state 15
    SWITCH              shift, and go to state 178
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 179
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 180
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    LEFT_CURLY_BRACKET  shift, and go to state 103
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    SEMI_COLON  reduce using rule 187 (expression_opt)
    $default    reduce using rule 179 (block_item_list_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 181
    declaration                go to state 182
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 183
    labeled_statement          go to state 184
    compound_statement         go to state 185
    block_item                 go to state 263
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


state 188

  181 block_item_list: block_item .

    $default  reduce using rule 181 (block_item_list)


state 189

  171 statement: expression_statement .

    $default  reduce using rule 171 (statement)


state 190

  185 expression_statement: expression_opt . SEMI_COLON

    SEMI_COLON  shift, and go to state 264


state 191

  172 statement: selection_statement .

    $default  reduce using rule 172 (statement)


state 192

  173 statement: iteration_statement .

    $default  reduce using rule 173 (statement)


state 193

  174 statement: jump_statement .

    $default  reduce using rule 174 (statement)


state 194

  131 direct_declarator: LEFT_PARENTHESES declarator RIGHT_PARENTHESES .

    $default  reduce using rule 131 (direct_declarator)


state 195

  133 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET STATIC . type_qualifier_list_opt assignment_expression RIGHT_SQUARE_BRACKET

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 139 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 265
    type_qualifier_list      go to state 51


state 196

  132 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list_opt . assignment_expression_opt RIGHT_SQUARE_BRACKET
  135                  | direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list_opt . ASTERISK RIGHT_SQUARE_BRACKET

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 266
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    $default  reduce using rule 141 (assignment_expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 267
    assignment_expression_opt  go to state 268


state 197

  134 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list . STATIC assignment_expression RIGHT_SQUARE_BRACKET
  138 type_qualifier_list_opt: type_qualifier_list .
  147 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    STATIC    shift, and go to state 269
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 138 (type_qualifier_list_opt)

    type_qualifier  go to state 66


state 198

  154 identifier_list: IDENTIFIER .

    $default  reduce using rule 154 (identifier_list)


state 199

  152 parameter_declaration: declaration_specifiers . declarator
  153                      | declaration_specifiers .

    ASTERISK  shift, and go to state 34

    COMMA              reduce using rule 153 (parameter_declaration)
    RIGHT_PARENTHESES  reduce using rule 153 (parameter_declaration)
    $default           reduce using rule 129 (pointer_opt)

    declarator   go to state 270
    pointer_opt  go to state 39
    pointer      go to state 40


state 200

  137 direct_declarator: direct_declarator LEFT_PARENTHESES identifier_list_opt . RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 271


state 201

  136 direct_declarator: direct_declarator LEFT_PARENTHESES parameter_type_list . RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 272


state 202

  148 parameter_type_list: parameter_list .
  149                    | parameter_list . COMMA ELLIPSIS
  151 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 273

    $default  reduce using rule 148 (parameter_type_list)


state 203

  150 parameter_list: parameter_declaration .

    $default  reduce using rule 150 (parameter_list)


state 204

  142 identifier_list_opt: identifier_list .
  155 identifier_list: identifier_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 274

    $default  reduce using rule 142 (identifier_list_opt)


state 205

   79 constant_expression: conditional_expression .

    $default  reduce using rule 79 (constant_expression)


state 206

  122 enumerator: IDENTIFIER ASSIGNMENT constant_expression .

    $default  reduce using rule 122 (enumerator)


state 207

  115 enum_specifier: ENUM identifier_opt LEFT_CURLY_BRACKET enumerator_list COMMA RIGHT_CURLY_BRACKET .

    $default  reduce using rule 115 (enum_specifier)


state 208

  120 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 120 (enumerator_list)


state 209

   14 postfix_expression: LEFT_PARENTHESES type_name . RIGHT_PARENTHESES LEFT_CURLY_BRACKET initialiser_list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESES type_name . RIGHT_PARENTHESES LEFT_CURLY_BRACKET initialiser_list COMMA RIGHT_CURLY_BRACKET
   25 unary_expression: SIZEOF LEFT_PARENTHESES type_name . RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 275


state 210

   14 postfix_expression: LEFT_PARENTHESES type_name . RIGHT_PARENTHESES LEFT_CURLY_BRACKET initialiser_list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESES type_name . RIGHT_PARENTHESES LEFT_CURLY_BRACKET initialiser_list COMMA RIGHT_CURLY_BRACKET

    RIGHT_PARENTHESES  shift, and go to state 276


state 211

   78 expression: expression COMMA . assignment_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 277


state 212

    6 primary_expression: LEFT_PARENTHESES expression RIGHT_PARENTHESES .

    $default  reduce using rule 6 (primary_expression)


state 213

  112 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 112 (specifier_qualifier_list_opt)


state 214

  110 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 110 (specifier_qualifier_list)


state 215

  111 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 111 (specifier_qualifier_list)


state 216

   14 postfix_expression: LEFT_PARENTHESES type_name RIGHT_PARENTHESES . LEFT_CURLY_BRACKET initialiser_list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESES type_name RIGHT_PARENTHESES . LEFT_CURLY_BRACKET initialiser_list COMMA RIGHT_CURLY_BRACKET
   33 cast_expression: LEFT_PARENTHESES type_name RIGHT_PARENTHESES . cast_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    LEFT_CURLY_BRACKET  shift, and go to state 278
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 148
    unary_operator      go to state 88
    cast_expression     go to state 279


state 217

  167 designator: LEFT_SQUARE_BRACKET constant_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 280


state 218

  168 designator: DOT IDENTIFIER .

    $default  reduce using rule 168 (designator)


state 219

  159 initialiser: LEFT_CURLY_BRACKET initialiser_list COMMA . RIGHT_CURLY_BRACKET
  161 initialiser_list: initialiser_list COMMA . designation_opt initialiser

    LEFT_SQUARE_BRACKET  shift, and go to state 122
    RIGHT_CURLY_BRACKET  shift, and go to state 281
    DOT                  shift, and go to state 123

    $default  reduce using rule 163 (designation_opt)

    designation_opt  go to state 282
    designation      go to state 126
    designator_list  go to state 127
    designator       go to state 128


state 220

  158 initialiser: LEFT_CURLY_BRACKET initialiser_list RIGHT_CURLY_BRACKET .

    $default  reduce using rule 158 (initialiser)


state 221

  160 initialiser_list: designation_opt initialiser .

    $default  reduce using rule 160 (initialiser_list)


state 222

  164 designation: designator_list ASSIGNMENT .

    $default  reduce using rule 164 (designation)


state 223

  166 designator_list: designator_list designator .

    $default  reduce using rule 166 (designator_list)


state 224

    8 postfix_expression: postfix_expression LEFT_SQUARE_BRACKET expression . RIGHT_SQUARE_BRACKET
   78 expression: expression . COMMA assignment_expression

    COMMA                 shift, and go to state 211
    RIGHT_SQUARE_BRACKET  shift, and go to state 283


state 225

    9 postfix_expression: postfix_expression LEFT_PARENTHESES argument_expression_list_opt . RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 284


state 226

   16 argument_expression_list_opt: argument_expression_list .
   19 argument_expression_list: argument_expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 285

    $default  reduce using rule 16 (argument_expression_list_opt)


state 227

   18 argument_expression_list: assignment_expression .

    $default  reduce using rule 18 (argument_expression_list)


state 228

   10 postfix_expression: postfix_expression DOT IDENTIFIER .

    $default  reduce using rule 10 (postfix_expression)


state 229

   11 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 11 (postfix_expression)


state 230

   65 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 65 (assignment_expression)


state 231

   36 multiplicative_expression: multiplicative_expression SLASH cast_expression .

    $default  reduce using rule 36 (multiplicative_expression)


state 232

   35 multiplicative_expression: multiplicative_expression ASTERISK cast_expression .

    $default  reduce using rule 35 (multiplicative_expression)


state 233

   37 multiplicative_expression: multiplicative_expression MODULO cast_expression .

    $default  reduce using rule 37 (multiplicative_expression)


state 234

   35 multiplicative_expression: multiplicative_expression . ASTERISK cast_expression
   36                          | multiplicative_expression . SLASH cast_expression
   37                          | multiplicative_expression . MODULO cast_expression
   39 additive_expression: additive_expression PLUS multiplicative_expression .

    SLASH     shift, and go to state 150
    ASTERISK  shift, and go to state 151
    MODULO    shift, and go to state 152

    $default  reduce using rule 39 (additive_expression)


state 235

   35 multiplicative_expression: multiplicative_expression . ASTERISK cast_expression
   36                          | multiplicative_expression . SLASH cast_expression
   37                          | multiplicative_expression . MODULO cast_expression
   40 additive_expression: additive_expression MINUS multiplicative_expression .

    SLASH     shift, and go to state 150
    ASTERISK  shift, and go to state 151
    MODULO    shift, and go to state 152

    $default  reduce using rule 40 (additive_expression)


state 236

   39 additive_expression: additive_expression . PLUS multiplicative_expression
   40                    | additive_expression . MINUS multiplicative_expression
   42 shift_expression: shift_expression LEFT_SHIFT additive_expression .

    PLUS   shift, and go to state 153
    MINUS  shift, and go to state 154

    $default  reduce using rule 42 (shift_expression)


state 237

   39 additive_expression: additive_expression . PLUS multiplicative_expression
   40                    | additive_expression . MINUS multiplicative_expression
   43 shift_expression: shift_expression RIGHT_SHIFT additive_expression .

    PLUS   shift, and go to state 153
    MINUS  shift, and go to state 154

    $default  reduce using rule 43 (shift_expression)


state 238

   42 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   43                 | shift_expression . RIGHT_SHIFT additive_expression
   45 relational_expression: relational_expression LESS_THAN shift_expression .

    LEFT_SHIFT   shift, and go to state 155
    RIGHT_SHIFT  shift, and go to state 156

    $default  reduce using rule 45 (relational_expression)


state 239

   42 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   43                 | shift_expression . RIGHT_SHIFT additive_expression
   46 relational_expression: relational_expression GREATER_THAN shift_expression .

    LEFT_SHIFT   shift, and go to state 155
    RIGHT_SHIFT  shift, and go to state 156

    $default  reduce using rule 46 (relational_expression)


state 240

   42 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   43                 | shift_expression . RIGHT_SHIFT additive_expression
   47 relational_expression: relational_expression LESS_EQUAL_THAN shift_expression .

    LEFT_SHIFT   shift, and go to state 155
    RIGHT_SHIFT  shift, and go to state 156

    $default  reduce using rule 47 (relational_expression)


state 241

   42 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   43                 | shift_expression . RIGHT_SHIFT additive_expression
   48 relational_expression: relational_expression GREATER_EQUAL_THAN shift_expression .

    LEFT_SHIFT   shift, and go to state 155
    RIGHT_SHIFT  shift, and go to state 156

    $default  reduce using rule 48 (relational_expression)


state 242

   45 relational_expression: relational_expression . LESS_THAN shift_expression
   46                      | relational_expression . GREATER_THAN shift_expression
   47                      | relational_expression . LESS_EQUAL_THAN shift_expression
   48                      | relational_expression . GREATER_EQUAL_THAN shift_expression
   50 equality_expression: equality_expression EQUALS relational_expression .

    LESS_THAN           shift, and go to state 157
    GREATER_THAN        shift, and go to state 158
    LESS_EQUAL_THAN     shift, and go to state 159
    GREATER_EQUAL_THAN  shift, and go to state 160

    $default  reduce using rule 50 (equality_expression)


state 243

   45 relational_expression: relational_expression . LESS_THAN shift_expression
   46                      | relational_expression . GREATER_THAN shift_expression
   47                      | relational_expression . LESS_EQUAL_THAN shift_expression
   48                      | relational_expression . GREATER_EQUAL_THAN shift_expression
   51 equality_expression: equality_expression NOT_EQUALS relational_expression .

    LESS_THAN           shift, and go to state 157
    GREATER_THAN        shift, and go to state 158
    LESS_EQUAL_THAN     shift, and go to state 159
    GREATER_EQUAL_THAN  shift, and go to state 160

    $default  reduce using rule 51 (equality_expression)


state 244

   50 equality_expression: equality_expression . EQUALS relational_expression
   51                    | equality_expression . NOT_EQUALS relational_expression
   53 AND_expression: AND_expression BITWISE_AND equality_expression .

    EQUALS      shift, and go to state 161
    NOT_EQUALS  shift, and go to state 162

    $default  reduce using rule 53 (AND_expression)


state 245

   53 AND_expression: AND_expression . BITWISE_AND equality_expression
   55 exclusive_OR_expression: exclusive_OR_expression BITWISE_XOR AND_expression .

    BITWISE_AND  shift, and go to state 163

    $default  reduce using rule 55 (exclusive_OR_expression)


state 246

   55 exclusive_OR_expression: exclusive_OR_expression . BITWISE_XOR AND_expression
   57 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR exclusive_OR_expression .

    BITWISE_XOR  shift, and go to state 164

    $default  reduce using rule 57 (inclusive_OR_expression)


state 247

   57 inclusive_OR_expression: inclusive_OR_expression . BITWISE_OR exclusive_OR_expression
   59 logical_AND_expression: logical_AND_expression LOGICAL_AND inclusive_OR_expression .

    BITWISE_OR  shift, and go to state 165

    $default  reduce using rule 59 (logical_AND_expression)


state 248

   63 conditional_expression: logical_OR_expression QUESTION_MARK expression . COLON conditional_expression
   78 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 211
    COLON  shift, and go to state 286


state 249

   59 logical_AND_expression: logical_AND_expression . LOGICAL_AND inclusive_OR_expression
   61 logical_OR_expression: logical_OR_expression LOGICAL_OR logical_AND_expression .

    LOGICAL_AND  shift, and go to state 166

    $default  reduce using rule 61 (logical_OR_expression)


state 250

  197 jump_statement: BREAK SEMI_COLON .

    $default  reduce using rule 197 (jump_statement)


state 251

  176 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 287


state 252

  196 jump_statement: CONTINUE SEMI_COLON .

    $default  reduce using rule 196 (jump_statement)


state 253

  177 labeled_statement: DEFAULT COLON . statement

    BREAK               shift, and go to state 169
    CASE                shift, and go to state 170
    CONTINUE            shift, and go to state 171
    DEFAULT             shift, and go to state 172
    DO                  shift, and go to state 173
    FOR                 shift, and go to state 174
    GOTO                shift, and go to state 175
    IF                  shift, and go to state 176
    RETURN              shift, and go to state 177
    SIZEOF              shift, and go to state 69
    SWITCH              shift, and go to state 178
    WHILE               shift, and go to state 179
    IDENTIFIER          shift, and go to state 180
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    LEFT_CURLY_BRACKET  shift, and go to state 103
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 181
    statement                  go to state 288
    labeled_statement          go to state 184
    compound_statement         go to state 185
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


state 254

  192 iteration_statement: DO statement . WHILE LEFT_PARENTHESES expression RIGHT_PARENTHESES SEMI_COLON

    WHILE  shift, and go to state 289


state 255

  193 iteration_statement: FOR LEFT_PARENTHESES . expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt RIGHT_PARENTHESES statement
  194                    | FOR LEFT_PARENTHESES . declaration expression_opt SEMI_COLON expression_opt RIGHT_PARENTHESES statement

    AUTO                shift, and go to state 1
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    EXTERN              shift, and go to state 6
    FLOAT               shift, and go to state 7
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    REGISTER            shift, and go to state 11
    RESTRICT            shift, and go to state 12
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 69
    STATIC              shift, and go to state 15
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 181
    declaration                go to state 290
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    expression_opt             go to state 291


state 256

  195 jump_statement: GOTO IDENTIFIER . SEMI_COLON

    SEMI_COLON  shift, and go to state 292


state 257

  188 selection_statement: IF LEFT_PARENTHESES . expression RIGHT_PARENTHESES statement
  189                    | IF LEFT_PARENTHESES . expression RIGHT_PARENTHESES statement ELSE statement

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 293


state 258

  198 jump_statement: RETURN expression_opt . SEMI_COLON

    SEMI_COLON  shift, and go to state 294


state 259

  190 selection_statement: SWITCH LEFT_PARENTHESES . expression RIGHT_PARENTHESES statement

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 295


state 260

  191 iteration_statement: WHILE LEFT_PARENTHESES . expression RIGHT_PARENTHESES statement

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 296


state 261

  175 labeled_statement: IDENTIFIER COLON . statement

    BREAK               shift, and go to state 169
    CASE                shift, and go to state 170
    CONTINUE            shift, and go to state 171
    DEFAULT             shift, and go to state 172
    DO                  shift, and go to state 173
    FOR                 shift, and go to state 174
    GOTO                shift, and go to state 175
    IF                  shift, and go to state 176
    RETURN              shift, and go to state 177
    SIZEOF              shift, and go to state 69
    SWITCH              shift, and go to state 178
    WHILE               shift, and go to state 179
    IDENTIFIER          shift, and go to state 180
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    LEFT_CURLY_BRACKET  shift, and go to state 103
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 181
    statement                  go to state 297
    labeled_statement          go to state 184
    compound_statement         go to state 185
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


state 262

  178 compound_statement: LEFT_CURLY_BRACKET block_item_list_opt RIGHT_CURLY_BRACKET .

    $default  reduce using rule 178 (compound_statement)


state 263

  182 block_item_list: block_item_list block_item .

    $default  reduce using rule 182 (block_item_list)


state 264

  185 expression_statement: expression_opt SEMI_COLON .

    $default  reduce using rule 185 (expression_statement)


state 265

  133 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET STATIC type_qualifier_list_opt . assignment_expression RIGHT_SQUARE_BRACKET

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 298


state 266

   27 unary_operator: ASTERISK .
  135 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list_opt ASTERISK . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 299

    $default  reduce using rule 27 (unary_operator)


state 267

  140 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 140 (assignment_expression_opt)


state 268

  132 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list_opt assignment_expression_opt . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 300


state 269

  134 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list STATIC . assignment_expression RIGHT_SQUARE_BRACKET

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 301


state 270

  152 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 152 (parameter_declaration)


state 271

  137 direct_declarator: direct_declarator LEFT_PARENTHESES identifier_list_opt RIGHT_PARENTHESES .

    $default  reduce using rule 137 (direct_declarator)


state 272

  136 direct_declarator: direct_declarator LEFT_PARENTHESES parameter_type_list RIGHT_PARENTHESES .

    $default  reduce using rule 136 (direct_declarator)


state 273

  149 parameter_type_list: parameter_list COMMA . ELLIPSIS
  151 parameter_list: parameter_list COMMA . parameter_declaration

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21
    ELLIPSIS    shift, and go to state 302

    declaration_specifiers   go to state 199
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_declaration    go to state 303


state 274

  155 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 304


state 275

   14 postfix_expression: LEFT_PARENTHESES type_name RIGHT_PARENTHESES . LEFT_CURLY_BRACKET initialiser_list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESES type_name RIGHT_PARENTHESES . LEFT_CURLY_BRACKET initialiser_list COMMA RIGHT_CURLY_BRACKET
   25 unary_expression: SIZEOF LEFT_PARENTHESES type_name RIGHT_PARENTHESES .

    LEFT_CURLY_BRACKET  shift, and go to state 278

    $default  reduce using rule 25 (unary_expression)


state 276

   14 postfix_expression: LEFT_PARENTHESES type_name RIGHT_PARENTHESES . LEFT_CURLY_BRACKET initialiser_list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESES type_name RIGHT_PARENTHESES . LEFT_CURLY_BRACKET initialiser_list COMMA RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 278


state 277

   78 expression: expression COMMA assignment_expression .

    $default  reduce using rule 78 (expression)


state 278

   14 postfix_expression: LEFT_PARENTHESES type_name RIGHT_PARENTHESES LEFT_CURLY_BRACKET . initialiser_list RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESES type_name RIGHT_PARENTHESES LEFT_CURLY_BRACKET . initialiser_list COMMA RIGHT_CURLY_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 122
    DOT                  shift, and go to state 123

    $default  reduce using rule 163 (designation_opt)

    initialiser_list  go to state 305
    designation_opt   go to state 125
    designation       go to state 126
    designator_list   go to state 127
    designator        go to state 128


state 279

   33 cast_expression: LEFT_PARENTHESES type_name RIGHT_PARENTHESES cast_expression .

    $default  reduce using rule 33 (cast_expression)


state 280

  167 designator: LEFT_SQUARE_BRACKET constant_expression RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 167 (designator)


state 281

  159 initialiser: LEFT_CURLY_BRACKET initialiser_list COMMA RIGHT_CURLY_BRACKET .

    $default  reduce using rule 159 (initialiser)


state 282

  161 initialiser_list: initialiser_list COMMA designation_opt . initialiser

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    LEFT_CURLY_BRACKET  shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 101
    initialiser                go to state 306


state 283

    8 postfix_expression: postfix_expression LEFT_SQUARE_BRACKET expression RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 8 (postfix_expression)


state 284

    9 postfix_expression: postfix_expression LEFT_PARENTHESES argument_expression_list_opt RIGHT_PARENTHESES .

    $default  reduce using rule 9 (postfix_expression)


state 285

   19 argument_expression_list: argument_expression_list COMMA . assignment_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 307


state 286

   63 conditional_expression: logical_OR_expression QUESTION_MARK expression COLON . conditional_expression

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 308


state 287

  176 labeled_statement: CASE constant_expression COLON . statement

    BREAK               shift, and go to state 169
    CASE                shift, and go to state 170
    CONTINUE            shift, and go to state 171
    DEFAULT             shift, and go to state 172
    DO                  shift, and go to state 173
    FOR                 shift, and go to state 174
    GOTO                shift, and go to state 175
    IF                  shift, and go to state 176
    RETURN              shift, and go to state 177
    SIZEOF              shift, and go to state 69
    SWITCH              shift, and go to state 178
    WHILE               shift, and go to state 179
    IDENTIFIER          shift, and go to state 180
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    LEFT_CURLY_BRACKET  shift, and go to state 103
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 181
    statement                  go to state 309
    labeled_statement          go to state 184
    compound_statement         go to state 185
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


state 288

  177 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 177 (labeled_statement)


state 289

  192 iteration_statement: DO statement WHILE . LEFT_PARENTHESES expression RIGHT_PARENTHESES SEMI_COLON

    LEFT_PARENTHESES  shift, and go to state 310


state 290

  194 iteration_statement: FOR LEFT_PARENTHESES declaration . expression_opt SEMI_COLON expression_opt RIGHT_PARENTHESES statement

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 181
    expression_opt             go to state 311


state 291

  193 iteration_statement: FOR LEFT_PARENTHESES expression_opt . SEMI_COLON expression_opt SEMI_COLON expression_opt RIGHT_PARENTHESES statement

    SEMI_COLON  shift, and go to state 312


state 292

  195 jump_statement: GOTO IDENTIFIER SEMI_COLON .

    $default  reduce using rule 195 (jump_statement)


state 293

   78 expression: expression . COMMA assignment_expression
  188 selection_statement: IF LEFT_PARENTHESES expression . RIGHT_PARENTHESES statement
  189                    | IF LEFT_PARENTHESES expression . RIGHT_PARENTHESES statement ELSE statement

    COMMA              shift, and go to state 211
    RIGHT_PARENTHESES  shift, and go to state 313


state 294

  198 jump_statement: RETURN expression_opt SEMI_COLON .

    $default  reduce using rule 198 (jump_statement)


state 295

   78 expression: expression . COMMA assignment_expression
  190 selection_statement: SWITCH LEFT_PARENTHESES expression . RIGHT_PARENTHESES statement

    COMMA              shift, and go to state 211
    RIGHT_PARENTHESES  shift, and go to state 314


state 296

   78 expression: expression . COMMA assignment_expression
  191 iteration_statement: WHILE LEFT_PARENTHESES expression . RIGHT_PARENTHESES statement

    COMMA              shift, and go to state 211
    RIGHT_PARENTHESES  shift, and go to state 315


state 297

  175 labeled_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 175 (labeled_statement)


state 298

  133 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET STATIC type_qualifier_list_opt assignment_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 316


state 299

  135 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list_opt ASTERISK RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 135 (direct_declarator)


state 300

  132 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list_opt assignment_expression_opt RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 132 (direct_declarator)


state 301

  134 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list STATIC assignment_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 317


state 302

  149 parameter_type_list: parameter_list COMMA ELLIPSIS .

    $default  reduce using rule 149 (parameter_type_list)


state 303

  151 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 151 (parameter_list)


state 304

  155 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 155 (identifier_list)


state 305

   14 postfix_expression: LEFT_PARENTHESES type_name RIGHT_PARENTHESES LEFT_CURLY_BRACKET initialiser_list . RIGHT_CURLY_BRACKET
   15                   | LEFT_PARENTHESES type_name RIGHT_PARENTHESES LEFT_CURLY_BRACKET initialiser_list . COMMA RIGHT_CURLY_BRACKET
  161 initialiser_list: initialiser_list . COMMA designation_opt initialiser

    COMMA                shift, and go to state 318
    RIGHT_CURLY_BRACKET  shift, and go to state 319


state 306

  161 initialiser_list: initialiser_list COMMA designation_opt initialiser .

    $default  reduce using rule 161 (initialiser_list)


state 307

   19 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 19 (argument_expression_list)


state 308

   63 conditional_expression: logical_OR_expression QUESTION_MARK expression COLON conditional_expression .

    $default  reduce using rule 63 (conditional_expression)


state 309

  176 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 176 (labeled_statement)


state 310

  192 iteration_statement: DO statement WHILE LEFT_PARENTHESES . expression RIGHT_PARENTHESES SEMI_COLON

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 320


state 311

  194 iteration_statement: FOR LEFT_PARENTHESES declaration expression_opt . SEMI_COLON expression_opt RIGHT_PARENTHESES statement

    SEMI_COLON  shift, and go to state 321


state 312

  193 iteration_statement: FOR LEFT_PARENTHESES expression_opt SEMI_COLON . expression_opt SEMI_COLON expression_opt RIGHT_PARENTHESES statement

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 181
    expression_opt             go to state 322


state 313

  188 selection_statement: IF LEFT_PARENTHESES expression RIGHT_PARENTHESES . statement
  189                    | IF LEFT_PARENTHESES expression RIGHT_PARENTHESES . statement ELSE statement

    BREAK               shift, and go to state 169
    CASE                shift, and go to state 170
    CONTINUE            shift, and go to state 171
    DEFAULT             shift, and go to state 172
    DO                  shift, and go to state 173
    FOR                 shift, and go to state 174
    GOTO                shift, and go to state 175
    IF                  shift, and go to state 176
    RETURN              shift, and go to state 177
    SIZEOF              shift, and go to state 69
    SWITCH              shift, and go to state 178
    WHILE               shift, and go to state 179
    IDENTIFIER          shift, and go to state 180
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    LEFT_CURLY_BRACKET  shift, and go to state 103
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 181
    statement                  go to state 323
    labeled_statement          go to state 184
    compound_statement         go to state 185
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


state 314

  190 selection_statement: SWITCH LEFT_PARENTHESES expression RIGHT_PARENTHESES . statement

    BREAK               shift, and go to state 169
    CASE                shift, and go to state 170
    CONTINUE            shift, and go to state 171
    DEFAULT             shift, and go to state 172
    DO                  shift, and go to state 173
    FOR                 shift, and go to state 174
    GOTO                shift, and go to state 175
    IF                  shift, and go to state 176
    RETURN              shift, and go to state 177
    SIZEOF              shift, and go to state 69
    SWITCH              shift, and go to state 178
    WHILE               shift, and go to state 179
    IDENTIFIER          shift, and go to state 180
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    LEFT_CURLY_BRACKET  shift, and go to state 103
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 181
    statement                  go to state 324
    labeled_statement          go to state 184
    compound_statement         go to state 185
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


state 315

  191 iteration_statement: WHILE LEFT_PARENTHESES expression RIGHT_PARENTHESES . statement

    BREAK               shift, and go to state 169
    CASE                shift, and go to state 170
    CONTINUE            shift, and go to state 171
    DEFAULT             shift, and go to state 172
    DO                  shift, and go to state 173
    FOR                 shift, and go to state 174
    GOTO                shift, and go to state 175
    IF                  shift, and go to state 176
    RETURN              shift, and go to state 177
    SIZEOF              shift, and go to state 69
    SWITCH              shift, and go to state 178
    WHILE               shift, and go to state 179
    IDENTIFIER          shift, and go to state 180
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    LEFT_CURLY_BRACKET  shift, and go to state 103
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 181
    statement                  go to state 325
    labeled_statement          go to state 184
    compound_statement         go to state 185
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


state 316

  133 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET STATIC type_qualifier_list_opt assignment_expression RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 133 (direct_declarator)


state 317

  134 direct_declarator: direct_declarator LEFT_SQUARE_BRACKET type_qualifier_list STATIC assignment_expression RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 134 (direct_declarator)


state 318

   15 postfix_expression: LEFT_PARENTHESES type_name RIGHT_PARENTHESES LEFT_CURLY_BRACKET initialiser_list COMMA . RIGHT_CURLY_BRACKET
  161 initialiser_list: initialiser_list COMMA . designation_opt initialiser

    LEFT_SQUARE_BRACKET  shift, and go to state 122
    RIGHT_CURLY_BRACKET  shift, and go to state 326
    DOT                  shift, and go to state 123

    $default  reduce using rule 163 (designation_opt)

    designation_opt  go to state 282
    designation      go to state 126
    designator_list  go to state 127
    designator       go to state 128


state 319

   14 postfix_expression: LEFT_PARENTHESES type_name RIGHT_PARENTHESES LEFT_CURLY_BRACKET initialiser_list RIGHT_CURLY_BRACKET .

    $default  reduce using rule 14 (postfix_expression)


state 320

   78 expression: expression . COMMA assignment_expression
  192 iteration_statement: DO statement WHILE LEFT_PARENTHESES expression . RIGHT_PARENTHESES SEMI_COLON

    COMMA              shift, and go to state 211
    RIGHT_PARENTHESES  shift, and go to state 327


state 321

  194 iteration_statement: FOR LEFT_PARENTHESES declaration expression_opt SEMI_COLON . expression_opt RIGHT_PARENTHESES statement

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 181
    expression_opt             go to state 328


state 322

  193 iteration_statement: FOR LEFT_PARENTHESES expression_opt SEMI_COLON expression_opt . SEMI_COLON expression_opt RIGHT_PARENTHESES statement

    SEMI_COLON  shift, and go to state 329


state 323

  188 selection_statement: IF LEFT_PARENTHESES expression RIGHT_PARENTHESES statement .
  189                    | IF LEFT_PARENTHESES expression RIGHT_PARENTHESES statement . ELSE statement

    ELSE  shift, and go to state 330

    $default  reduce using rule 188 (selection_statement)


state 324

  190 selection_statement: SWITCH LEFT_PARENTHESES expression RIGHT_PARENTHESES statement .

    $default  reduce using rule 190 (selection_statement)


state 325

  191 iteration_statement: WHILE LEFT_PARENTHESES expression RIGHT_PARENTHESES statement .

    $default  reduce using rule 191 (iteration_statement)


state 326

   15 postfix_expression: LEFT_PARENTHESES type_name RIGHT_PARENTHESES LEFT_CURLY_BRACKET initialiser_list COMMA RIGHT_CURLY_BRACKET .

    $default  reduce using rule 15 (postfix_expression)


state 327

  192 iteration_statement: DO statement WHILE LEFT_PARENTHESES expression RIGHT_PARENTHESES . SEMI_COLON

    SEMI_COLON  shift, and go to state 331


state 328

  194 iteration_statement: FOR LEFT_PARENTHESES declaration expression_opt SEMI_COLON expression_opt . RIGHT_PARENTHESES statement

    RIGHT_PARENTHESES  shift, and go to state 332


state 329

  193 iteration_statement: FOR LEFT_PARENTHESES expression_opt SEMI_COLON expression_opt SEMI_COLON . expression_opt RIGHT_PARENTHESES statement

    SIZEOF              shift, and go to state 69
    IDENTIFIER          shift, and go to state 70
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 181
    expression_opt             go to state 333


state 330

  189 selection_statement: IF LEFT_PARENTHESES expression RIGHT_PARENTHESES statement ELSE . statement

    BREAK               shift, and go to state 169
    CASE                shift, and go to state 170
    CONTINUE            shift, and go to state 171
    DEFAULT             shift, and go to state 172
    DO                  shift, and go to state 173
    FOR                 shift, and go to state 174
    GOTO                shift, and go to state 175
    IF                  shift, and go to state 176
    RETURN              shift, and go to state 177
    SIZEOF              shift, and go to state 69
    SWITCH              shift, and go to state 178
    WHILE               shift, and go to state 179
    IDENTIFIER          shift, and go to state 180
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    LEFT_CURLY_BRACKET  shift, and go to state 103
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 181
    statement                  go to state 334
    labeled_statement          go to state 184
    compound_statement         go to state 185
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


state 331

  192 iteration_statement: DO statement WHILE LEFT_PARENTHESES expression RIGHT_PARENTHESES SEMI_COLON .

    $default  reduce using rule 192 (iteration_statement)


state 332

  194 iteration_statement: FOR LEFT_PARENTHESES declaration expression_opt SEMI_COLON expression_opt RIGHT_PARENTHESES . statement

    BREAK               shift, and go to state 169
    CASE                shift, and go to state 170
    CONTINUE            shift, and go to state 171
    DEFAULT             shift, and go to state 172
    DO                  shift, and go to state 173
    FOR                 shift, and go to state 174
    GOTO                shift, and go to state 175
    IF                  shift, and go to state 176
    RETURN              shift, and go to state 177
    SIZEOF              shift, and go to state 69
    SWITCH              shift, and go to state 178
    WHILE               shift, and go to state 179
    IDENTIFIER          shift, and go to state 180
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    LEFT_CURLY_BRACKET  shift, and go to state 103
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 181
    statement                  go to state 335
    labeled_statement          go to state 184
    compound_statement         go to state 185
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


state 333

  193 iteration_statement: FOR LEFT_PARENTHESES expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt . RIGHT_PARENTHESES statement

    RIGHT_PARENTHESES  shift, and go to state 336


state 334

  189 selection_statement: IF LEFT_PARENTHESES expression RIGHT_PARENTHESES statement ELSE statement .

    $default  reduce using rule 189 (selection_statement)


state 335

  194 iteration_statement: FOR LEFT_PARENTHESES declaration expression_opt SEMI_COLON expression_opt RIGHT_PARENTHESES statement .

    $default  reduce using rule 194 (iteration_statement)


state 336

  193 iteration_statement: FOR LEFT_PARENTHESES expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt RIGHT_PARENTHESES . statement

    BREAK               shift, and go to state 169
    CASE                shift, and go to state 170
    CONTINUE            shift, and go to state 171
    DEFAULT             shift, and go to state 172
    DO                  shift, and go to state 173
    FOR                 shift, and go to state 174
    GOTO                shift, and go to state 175
    IF                  shift, and go to state 176
    RETURN              shift, and go to state 177
    SIZEOF              shift, and go to state 69
    SWITCH              shift, and go to state 178
    WHILE               shift, and go to state 179
    IDENTIFIER          shift, and go to state 180
    INTEGER_CONSTANT    shift, and go to state 71
    FLOATING_CONSTANT   shift, and go to state 72
    CHARACTER_CONSTANT  shift, and go to state 73
    STRING_LITERAL      shift, and go to state 74
    INCREMENT           shift, and go to state 75
    LEFT_PARENTHESES    shift, and go to state 76
    LEFT_CURLY_BRACKET  shift, and go to state 103
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    DECREMENT           shift, and go to state 83
    BITWISE_AND         shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    AND_expression             go to state 95
    exclusive_OR_expression    go to state 96
    inclusive_OR_expression    go to state 97
    logical_AND_expression     go to state 98
    logical_OR_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 116
    expression                 go to state 181
    statement                  go to state 337
    labeled_statement          go to state 184
    compound_statement         go to state 185
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


state 337

  193 iteration_statement: FOR LEFT_PARENTHESES expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt RIGHT_PARENTHESES statement .

    $default  reduce using rule 193 (iteration_statement)
